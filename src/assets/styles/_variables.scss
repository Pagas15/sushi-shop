$black: #ffffff;
$background: #181818;
$gray-line: #f6f6f6;
$orange: #fe5f1e;

$container-width: 90%;

$duration: 0.15s;

@use 'sass:math';

/* urls ================================================= */

$url-font: '../fonts/';

/* color ================================================= */

$cWh: #ffffff;

/* Container & Breackpoint ================================================= */

$break_lg: 1200px;
$break_md: 992px;
$break_sm: 768px;
$break_xs: 480px;

$fields: 60px;
$conteinerfield: math.div($fields, 2);

$fields_md: 30px;
$conteinerfield_md: math.div($fields, 2);

$wrapper: 1280px;

$columns: 12;

/* Fonts ================================================= */

$fontMain: 'Arial';
$fontMainWeight: 400;

/* ========================== mixin ======================= */

// Adding fonts

@mixin font($f-name, $f-path, $f-weight: normal, $f-style: normal) {
  @font-face {
    font-family: $f-name;
    src: url('#{$url-font}#{$f-path}.eot');
    src: url('#{$url-font}#{$f-path}.eot?#iefix') format('embedded-opentype'),
      url('#{$url-font}#{$f-path}.woff') format('woff'),
      url('#{$url-font}#{$f-path}.ttf') format('truetype');
    font-weight: $f-weight;
    font-style: $f-style;
    font-display: swap;
  }
}

// For text (size, height, width) font

@mixin lq($num1, $num2, $fondW: 400) {
  font-size: $num1;
  line-height: #{$num2/$num1}em;
  font-weight: $fondW;
}

/* custom ================================================= */

@mixin wrapper-full() {
  padding-left: $conteinerfield;
  padding-right: $conteinerfield;

  @include md-block() {
    padding-left: $fields_md;
    padding-right: $fields_md;
  }
}

@mixin wrapper() {
  max-width: $wrapper;
  width: 100%;
  margin: 0 auto;
  @include wrapper-full();
}

/* addaptive ================================================= */

@mixin lg-block() {
  @media screen and (max-width: $break_lg) {
    @content;
  }
}

@mixin md-block() {
  @media screen and (max-width: $break_md) {
    @content;
  }
}

@mixin sm-block() {
  @media screen and (max-width: $break_sm) {
    @content;
  }
}

@mixin xs-block() {
  @media screen and (max-width: $break_xs) {
    @content;
  }
}

@mixin from($min_width) {
  @media screen and (min-width: $min_width) {
    @content;
  }
}

@mixin to($max_width) {
  @media screen and (max-width: $max_width) {
    @content;
  }
}

@mixin from-to($min_width, $max_width) {
  @media screen and (min-width: $min_width) and (max-width: $max_width) {
    @content;
  }
}
